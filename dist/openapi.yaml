openapi: 3.0.0
info:
  title: Recipes api
  description: API for recipes project
  version: 1.0.1
servers:
# local:
- url: "http://127.0.0.1:3000"
# remote:
# - url: "http://132.72.65.211"
  description: SwaggerHub API Auto Mocking hey
tags:
- name: Auth
  description: All authentication related routes
- name: Users
  description: All the user's personal app info
- name: Recipes
  description: All reciepes general info
paths:
  /register:
    post:
      tags:
      - Auth
      summary: A new user from the client is added to the server
      description: A JSON object contains all the details about the new user.
      requestBody:
        description: Inventory item to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "201":
          description: A new user has been added
        "400":
          description: wrong input parameters
  /login:
    post:
      tags:
      - Auth
      summary: Login an exist user
      description: An exist user login to the system
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginScheme'
        required: true
      responses:
        "200":
          description: |
            User was found in the DB and authenitcated successfully. The session ID is returned in a cookie named `session`.  You should include this cookie in subsequent requests
          headers:
            Set-Cookie:
              style: simple
              explode: false
              schema:
                type: string
                example: session=87s97sdhgf279293f8w0e9
        "401":
          description: Authentication failed
  /logout:
    post:
      tags:
        - Auth
      summary: logout a user from the system and delete his cookie
      responses:
        "200":
          description: "the user has ben successfully logged out"
  /users/favorites:
    get:
      tags:
      - Users
      summary: Return the favorite recipes that were saved by user
      description: Get an array of recipes that were saved by a specific user
      responses:
        "200":
          description: data about the user's favorites recipes returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'
        "401":
          description: user is not authorized
      security:
      - cookieAuth: []
    post:
      tags:
      - Users
      summary: save recipe in the favorites list of a user
      description: save recipe in the favorites list of a user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                recipeId:
                  type: string
                  description: recipe's id which the user saved
                  example: 716429
      responses:
        "200":
          description: The Recipe successfully saved as favorite
        "401":
          description: user is not authorized
      security:
      - cookieAuth: []
  /users/visited:
    get:
      tags:
      - Users
      summary: Return the last 3 watched recipes that were visited user
      description: Get an array the last 3 watched recipes that were visited by a specific user
      responses:
        "200":
          description: data about the user's 3 recently watched recipes returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'
        "401":
          description: user is not authorized
      security:
      - cookieAuth: []
    post:
      tags:
      - Users
      summary: save recipe in the watched recipes list of a user
      description: save recipe in the watched recipes list of a user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reciepeId:
                  type: string
                  description: reciepe's id which the user watched
                  example: 716429
      responses:
        "200":
          description: The Recipe successfully saved as visited
        "401":
          description: user is not authorized
      security:
      - cookieAuth: []
  /recipes/recipeId:
    get:
      tags:
      - Recipes
      summary: Return preview details on recipe by his ID
      description: Return preview details on recipe by his ID
      parameters:
      - name: recipeId
        in: query
        description: recipe's id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: data about the recipe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipePreview'
        "404":
          description: recipeId is not exists
      security:
      - cookieAuth: []
  /recipes/fullDetailes:
    get:
      tags:
      - Recipes
      summary: Return full details on recipe by his ID
      description: Return full details on recipe by his ID
      parameters:
      - name: recipeId
        in: query
        description: recipe's id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: data about the recipe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeFullDetailes'
        "404":
          description: recipeId is not exists
        security:
        - cookieAuth: []
  /recipes/random:
    get:
      tags:
      - Recipes
      summary: Return 3 random recipes preview details
      description: Return 3 random recipes preview details
      responses:
        "200":
          description: data about the recipe
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'
        "500":
          description: encountered an unexpected condition that prevented it from fulfilling the request
      security:
      - cookieAuth: []
  /recipes/search/query/:searchQuery/number/:num:
    get:
      tags:
      - Recipes
      summary: Retrive recipes by key words
      description: Retrive recipes by key words
      parameters:
      - name: searchQuery
        in: path
        description: search query
        required: true
        schema:
          type: string
      - name: num
        in: path
        description: the number of recipes to retrive
        required: true
        schema:
          type: int
      - name: cuisine
        in: query
        description: The cuisine(s) of the recipes. One or more, comma separated
        required: false
        schema:
          type: string
      - name: diet
        in: query
        description: The diet for which the recipes must be suitable.
        explode: false
        schema:
          type: string
      - name: intolerances
        in: query
        description: A comma-separated list of intolerances. All recipes returned must not contain ingredients that are not suitable for people with the intolerances entered.
        explode: false
        schema:
          type: string
      - name: sort
        in: query
        description: The strategy to sort recipes by
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: data about the recipe
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchPreview'
        "204":
          description: no recipes were found for this query
      security:
      - cookieAuth: []
  /users/createrecipe:
    post:
      tags:
      - Users
      summary: user create a recipe
      description: A JSON object contains all the details about the new recipe.
      requestBody:
        description: recipe item to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRecipe'
        required: true
      responses:
        "201":
          description: The Recipe successfully saved
        "400":
          description: wrong input parameters
      security:
      - cookieAuth: []
  /users/myrecipes:
    get:
      tags:
      - Users
      summary: Return the previews of the recipes that created by the user.
      description: Get an array of recipes that were created by a specific user
      responses:
        "200":
          description: data about the user's recipes returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MyRecipePreview'
        "401":
          description: user is not authorized
      security:
      - cookieAuth: []
  /users/myrecipes/fulldetailes/:recipeId:
    get:
      tags:
      - Users
      summary: Return the full detailes of therecipe that created by the user with the specific recipeID.
      description: Get full detailes of the recipe that were created by a specific user with specific recipeID.
      parameters:
      - name: recipeId
        in: path
        description: reciepe's id which the user saved
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: data about the recipe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MYRecipeFullDetailes'
        "204":
          description: invalid recipeID
        "401":
          description: user is not authorized
      security:
      - cookieAuth: []
  /users/familyrecipes:
    get:
      tags:
      - Users
      summary: Return the family recipes previews of the user.
      description: Get an array of family recipes previews of the user
      responses:
        "200":
          description: data about the user's family recipes returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MyRecipePreview'
        "401":
          description: user is not authorized
      security:
      - cookieAuth: []
  /users/familyrecipes/fulldetailes/:recipeId:
    get:
      tags:
      - Users
      summary: Return the full detailes of the user's family recipe with the specific recipeID.
      description: Get full detailes of the user's family recipe with the specific recipeID.
      parameters:
      - name: recipeId
        in: path
        description: reciepe's id which the user saved as Family recipes
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: data about the recipe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilyRecipeFullDetailes'
        "204":
          description: invalid recipeID
        "401":
          description: user is not authorized
      security:
      - cookieAuth: []
components:
  schemas:
    User:
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: username conatins between 3 to 8 letters only
          example: my_name
        password:
          maxLength: 10
          minLength: 5
          type: string
          description: password conatins between 5 to 10 chars, at least one of them
            is a number and a special char
          format: password
          example: my_name@12
      description: Model containing user info
    LoginScheme:
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: username conatins letters only
        password:
          maxLength: 10
          minLength: 5
          description: password conatins at least one number and one special char
          format: password
      example:
        username: my_name
        password: my_name@12
    RecipePreview:
      type: object
      properties:
        id:
          type: integer
          description: recipe identifier
          example: 102
        title:
          type: string
          description: recipe name
          example: Simple Macaroni and Cheese
        readyInMinutes:
          type: integer
          description: the time takes to make this recipe
          example: 45
        image:
          type: string
          description: recipe image
          format: URL
          example: https://spoonacular.com/recipeimages/655455-566x370.jpg
        popularity:
          type: integer
          description: how many likes got this recipe
          example: 5987
        vegan:
          type: boolean
          description: indication if the recipe is vegan
          example: false
        vegetarian:
          type: boolean
          description: indication if the recipe is vegetarian
          example: false
        glutenFree:
          type: boolean
          description: indication if the recipe is gluten free
          example: false
        isFavorite:
          type: boolean
          description: indication if the recipe is a favorite of the user
          example: false
        isVisited:
          type: boolean
          description: indication if the recipe was visited by the user
          example: false
    MyRecipePreview:
      type: object
      properties:
        recipe_id:
          type: integer
          description: recipe identifier
          example: 102
        title:
          type: string
          description: recipe name
          example: Simple Macaroni and Cheese
        readyInMinutes:
          type: integer
          description: the time takes to make this recipe
          example: 45
        image:
          type: string
          description: recipe image
          format: URL
          example: https://spoonacular.com/recipeimages/655455-566x370.jpg
        aggregateLikes:
          type: integer
          description: how many likes got this recipe
          example: 5987
        vegan:
          type: integer
          description: indication if the recipe is vegan, 0 if false 1 if true
          example: 0
        vegetarian:
          type: integer
          description: indication if the recipe is vegetarian, 0 if false 1 if true
          example: 1
        glutenFree:
          type: integer
          description: indication if the recipe is gluten free, 0 if false 1 if true
          example: 0
    
    RecipeFullDetailes:
      type: object
      properties:
        id:
          type: integer
          description: recipe identifier
          example: 102
        title:
          type: string
          description: recipe name
          example: Simple Macaroni and Cheese
        readyInMinutes:
          type: integer
          description: the time takes to make this recipe
          example: 45
        image:
          type: string
          description: recipe image
          format: URL
          example: https://spoonacular.com/recipeimages/655455-566x370.jpg
        popularity:
          type: integer
          description: how many likes got this recipe
          example: 5987
        vegan:
          type: boolean
          description: indication if the recipe is vegan
          example: false
        vegetarian:
          type: boolean
          description: indication if the recipe is vegetarian
          example: false
        glutenFree:
          type: boolean
          description: indication if the recipe is gluten free
          example: false
        extendedIngredients:
          type: object
          description: list of dicts of ingredients 
          example: [{
            "id": 9152,
            "aisle": "Produce",
            "image": "lemon-juice.jpg",
            "consistency": "LIQUID",
            "name": "lemon juice",
            "nameClean": "lemon juice",
            "original": "2 tablespoons lemon juice",
            "originalName": "lemon juice",
            "amount": 2,
            "unit": "tablespoons",
            "meta": [],
            "measures": {
                "us": {
                    "amount": 2,
                    "unitShort": "Tbsps",
                    "unitLong": "Tbsps"
                },
                "metric": {
                    "amount": 2,
                    "unitShort": "Tbsps",
                    "unitLong": "Tbsps"
                }
            }
        }]
        servings:
          type: integer
          description: how many servings in the recipe
          example: 4
        analyzedInstructions:
          type: object
          description: instructions of the recipe by steps
          example: [
              {
                "name": "",
                "steps": [
                    {
                        "number": 1,
                        "step": "Stir mayonnaise, lemon juice, garlic, and paprikas together in a bowl. Chill aioli until serving.",
                        "ingredients": [
                            {
                                "id": 9152,
                                "name": "lemon juice",
                                "localizedName": "lemon juice",
                                "image": "lemon-juice.jpg"
                            },
                            {
                                "id": 4025,
                                "name": "mayonnaise",
                                "localizedName": "mayonnaise",
                                "image": "mayonnaise.png"
                            },
                            {
                                "id": 11215,
                                "name": "garlic",
                                "localizedName": "garlic",
                                "image": "garlic.png"
                            },
                            {
                                "id": 93758,
                                "name": "aioli",
                                "localizedName": "aioli",
                                "image": "aioli.jpg"
                            }
                        ],
                        "equipment": [
                            {
                                "id": 404783,
                                "name": "bowl",
                                "localizedName": "bowl",
                                "image": "bowl.jpg"
                            }
                        ]
              },]}]
      isFavorite:
        type: boolean
        description: indication if the recipe is a favorite of the user
        example: false
      isVisited:
        type: boolean
        description: indication if the recipe was visited by the user
        example: false
    FamilyRecipeFullDetailes:
      type: object
      properties:
        recipe_id:
          type: integer
          description: recipe identifier
          example: 102
        user_id:
          type: integer
          description: user identifier
          example: 102
        title:
          type: string
          description: recipe name
          example: Simple Macaroni and Cheese
        summary:
          type: string
          description: a short summary about the recipe
          example: Simple Macaroni and Cheese made by grandma in Shavout
        readyInMinutes:
          type: integer
          description: the time takes to make this recipe
          example: 45
        image:
          type: string
          description: recipe image
          format: URL
          example: https://spoonacular.com/recipeimages/655455-566x370.jpg
        aggregateLikes:
          type: integer
          description: how many likes got this recipe
          example: 5987
        vegan:
          type: integer
          description: indication if the recipe is vegan, 0 if false 1 if true
          example: 1
        vegetarian:
          type: integer
          description: indication if the recipe is vegetarian, 0 if false 1 if true
          example: 1
        glutenFree:
          type: integer
          description: indication if the recipe is gluten free, 0 if false 1 if true
          example: 0
        servings:
          type: integer
          description: how many servings in the recipe
          example: 4
        extendedIngredients:
          type: String
          description: string of ingredients and their name and amount splitted by $$$ 
          example: '1 cup of flower$$$1 cup of milk'
        analyzedInstructions:
          type: String
          description: string of instructions of the recipe by steps splitted by $$$ 
          example: 'Preheat the oven to 200 degrees F'
    MYRecipeFullDetailes:
      type: object
      properties:
        recipe_id:
          type: integer
          description: recipe identifier
          example: 102
        user_id:
          type: integer
          description: user identifier
          example: 102
        title:
          type: string
          description: recipe name
          example: Simple Macaroni and Cheese
        readyInMinutes:
          type: integer
          description: the time takes to make this recipe
          example: 45
        image:
          type: string
          description: recipe image
          format: URL
          example: https://spoonacular.com/recipeimages/655455-566x370.jpg
        aggregateLikes:
          type: integer
          description: how many likes got this recipe
          example: 5987
        vegan:
          type: integer
          description: indication if the recipe is vegan, 0 if false 1 if true
          example: 1
        vegetarian:
          type: integer
          description: indication if the recipe is vegetarian, 0 if false 1 if true
          example: 1
        glutenFree:
          type: integer
          description: indication if the recipe is gluten free, 0 if false 1 if true
          example: 0
        servings:
          type: integer
          description: how many servings in the recipe
          example: 4
        extendedIngredients:
          type: String
          description: string of ingredients and their name and amount splitted by $$$ 
          example: '1 cup of flower$$$1 cup of milk'
        analyzedInstructions:
          type: String
          description: string of instructions of the recipe by steps splitted by $$$ 
          example: 'Preheat the oven to 200 degrees F'
    CreateRecipe:
      type: object
      properties:
        title:
          type: string
          description: recipe name
          example: Simple Macaroni and Cheese
        readyInMinutes:
          type: integer
          description: the time takes to make this recipe
          example: 45
        image:
          type: string
          description: recipe image
          format: URL
          example: https://spoonacular.com/recipeimages/655455-566x370.jpg
        aggregateLikes:
          type: integer
          description: how many likes got this recipe
          example: 5987
        vegan:
          type: integer
          description: indication if the recipe is vegan, 0 if false 1 if true
          example: 1
        vegetarian:
          type: integer
          description: indication if the recipe is vegetarian, 0 if false 1 if true
          example: 1
        glutenFree:
          type: integer
          description: indication if the recipe is gluten free, 0 if false 1 if true
          example: 0
        servings:
          type: integer
          description: how many servings in the recipe
          example: 4
        extendedIngredients:
          type: String
          description: string of ingredients and their name and amount splitted by $$$ 
          example: '1 cup of flower$$$1 cup of milk'
        analyzedInstructions:
          type: String
          description: string of instructions of the recipe by steps splitted by $$$ 
          example: 'Preheat the oven to 200 degrees F'
    SearchPreview:
      type: object
      properties:
        id:
          type: integer
          description: recipe identifier
          example: 102
        title:
          type: string
          description: recipe name
          example: Simple Macaroni and Cheese
        readyInMinutes:
          type: integer
          description: the time takes to make this recipe
          example: 45
        image:
          type: string
          description: recipe image
          format: URL
          example: https://spoonacular.com/recipeimages/655455-566x370.jpg
        popularity:
          type: integer
          description: how many likes got this recipe
          example: 5987
        vegan:
          type: boolean
          description: indication if the recipe is vegan
          example: false
        vegetarian:
          type: boolean
          description: indication if the recipe is vegetarian
          example: false
        glutenFree:
          type: boolean
          description: indication if the recipe is gluten free
          example: false
        servings:
          type: integer
          description: how many servings in the recipe
          example: 4
        analyzedInstructions:
          type: object
          description: instructions of the recipe by steps
          example: [
              {
                "name": "",
                "steps": [
                    {
                        "number": 1,
                        "step": "Stir mayonnaise, lemon juice, garlic, and paprikas together in a bowl. Chill aioli until serving.",
                    },]}]
      isFavorite:
        type: boolean
        description: indication if the recipe is a favorite of the user
        example: false
      isVisited:
        type: boolean
        description: indication if the recipe was visited by the user
        example: false


  
